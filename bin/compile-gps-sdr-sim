#!/usr/bin/env node

require('../lib/banner')

const path = require('path')
const axios = require('axios')
const hasbin = require('hasbin')
const decompress = require('decompress')

const { mkdirp } = require('mkdirp')
const { program } = require('commander')

const { BUILD_DIRECTORY } = require('../lib/constants')

program
  .option('--gpssim-build-path <directory>', 'Build path for gps-sdr-sim', BUILD_DIRECTORY)

module.exports = async (options = {}) => {
  if (!hasbin.sync('gcc')) return console.error('gcc not found in PATH')

  console.info('Downloading gps-sdr-sim...')
  const { data } = await axios.request({
    url: 'https://github.com/antifasec/gps-sdr-sim/archive/refs/heads/master.zip',
    responseType: 'arraybuffer'
  })
  
  console.info('Extracting gps-sdr-sim...')
  await mkdirp(options.gpssimBuildPath)
  await decompress(data, options.gpssimBuildPath)

  console.info('Compiling gps-sdr-bin...')
  const { execa } = await import('execa')
  await execa('gcc', ['gpssim.c', '-lm', '-O3', '-o', 'gps-sdr-sim'], {
    cwd: path.resolve(options.gpssimBuildPath, 'gps-sdr-sim-master')
  }).pipeStdout(process.stdout)
    .pipeStderr(process.stderr)
}

if (require.main === module) {
  program.parse()
  module.exports(program.opts())
}